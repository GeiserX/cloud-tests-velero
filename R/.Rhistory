rep("C", 1000)))
aws_cluster$group <- "aws"
View(aws_cluster)
librarr("dplyr")
library("dplyr")
aws_cluster %>% select(-V2)
gcp_cluster$group <- "gcp"
cluster_combined <- rbind(aws_cluster, gcp_cluster)
View(aws_cluster)
aws_cluster <- aws_cluster %>% select(-V2)
gcp_cluster$group <- "gcp"
cluster_combined <- rbind(aws_cluster, gcp_cluster)
View(cluster_combined)
ggplot(cluster_combined, aes(x=V1, fill=group)) +
geom_histogram(bins = 20, color="darkblue", fill="lightblue") +
ggplot(cluster_combined, aes(x=V1, fill=group)) +
geom_histogram(bins = 20, color="darkblue", fill="lightblue")
ggplot(cluster_combined, aes(x=V1, fill=group)) +
geom_density(color="darkblue", fill="lightblue")
ggplot(cluster_combined, aes(x=V1, fill=group)) +
geom_density()
aws_cluster_main <- aws_cluster %>% select(-V2)
library("stringr")
library("ggplot2")
library("dplyr")
### GCP ###
gcp_cluster <- read.table("gke/timings.txt", header = F, sep = " ", colClasses = "numeric")
ggplot(gcp_cluster, aes(x=V1)) +
geom_histogram(bins=6)
gcp_workload <- read.table("gke/kubernetes/workload/timings.txt", header = F, sep = " ", colClasses = "numeric")
ggplot(gcp_workload, aes(x=V1)) +
geom_histogram(bins = 20)
### AWS ###
aws_cluster <- read.table("eks/timings.txt", header = F, sep = " ", colClasses = "numeric")
ggplot(aws_cluster, aes(x=V1)) +
geom_histogram(bins=10)
ggplot(aws_cluster, aes(x=V2)) +
geom_histogram(bins=10)
aws_workload <- read.table("eks/kubernetes/workload/timings.txt", header = F, sep = " ", colClasses = "numeric")
ggplot(aws_workload, aes(x=V1)) +
geom_histogram(bins = 20, color="darkblue", fill="lightblue") +
#geom_vline(aes(xintercept=mean(V1), color="blue", linetype="dashed")) +
geom_density(alpha=.92, fill="#FF6666")
### COMBINED ###
aws_cluster$group <- "aws"
aws_cluster_main <- aws_cluster %>% select(-V2)
gcp_cluster$group <- "gcp"
cluster_combined <- rbind(aws_cluster_main, gcp_cluster)
ggplot(cluster_combined, aes(x=V1, fill=group)) +
geom_density()
#without OIDC
aws_cluster
#without OIDC
aws_cluster$no_oidc <- aws_cluster$V1 - aws_cluster$V2
#without OIDC
aws_cluster
aws_cluster_no_oidc %>% select(c(-V1, -V2))
aws_cluster %>% select(c(-V1, -V2))
aws_cluster_no_oidc <- aws_cluster %>% select(c(-V1, -V2))
ggplot(cluster_combined2, aes(x=V1, fill=group)) +
geom_density()
cluster_combined2 <- rbind(aws_cluster_no_oidc, gcp_cluster)
ggplot(cluster_combined2, aes(x=V1, fill=group)) +
geom_density()
#without OIDC
aws_cluster$no_oidc <- aws_cluster$V1 - aws_cluster$V2
aws_cluster_no_oidc <- aws_cluster %>% select(c(-V1, -V2))
cluster_combined2 <- rbind(aws_cluster_no_oidc, gcp_cluster)
colnames(aws_cluster_no_oidc) <- c(group, V1)
colnames(aws_cluster_no_oidc) <- c("group", "V1")
cluster_combined2 <- rbind(aws_cluster_no_oidc, gcp_cluster)
ggplot(cluster_combined2, aes(x=V1, fill=group)) +
geom_density()
ggplot(cluster_combined2, aes(x=V1, fill=group)) +
geom_density(alpha=.2)
ggplot(cluster_combined2, aes(x=V1, fill=group)) +
geom_density(alpha=.5)
workload_combined <- rbind(aws_workload, gcp_workload)
# Workload
aws_workload$group <- "aws"
gcp_workload$group <- "gcp"
workload_combined <- rbind(aws_workload, gcp_workload)
ggplot(workload_combined, aes(x=V1, fill=group)) +
geom_density(alpha=.5)
aws_cluster$no_oidc <- aws_cluster$V1 - aws_cluster$V2
aws_cluster_no_oidc <- aws_cluster %>% select(c(-V1, -V2))
colnames(aws_cluster_no_oidc) <- c("group", "V1")
cluster_combined2 <- rbind(aws_cluster_no_oidc, gcp_cluster)
ggplot(cluster_combined2, aes(x=V1, fill=group)) +
geom_density(alpha=.5)
gcp_cluster <- read.table("gke/timings.txt", header = F, sep = " ", colClasses = "numeric")
colnames(gcp_cluster) <- "time_elapsed"
ggplot(gcp_cluster, aes(x=V1)) +
geom_histogram(bins=6)
library("stringr")
library("ggplot2")
library("dplyr")
### GCP ###
gcp_cluster <- read.table("gke/timings.txt", header = F, sep = " ", colClasses = "numeric")
colnames(gcp_cluster) <- "time_elapsed"
ggplot(gcp_cluster, aes(x=time_elapsed)) +
geom_histogram(bins=6)
gcp_workload <- read.table("gke/kubernetes/workload/timings.txt", header = F, sep = " ", colClasses = "numeric")
colnames(gcp_workload) <- "time_elapsed"
ggplot(gcp_workload, aes(x=time_elapsed)) +
geom_histogram(bins = 20)
### AWS ###
aws_cluster <- read.table("eks/timings.txt", header = F, sep = " ", colClasses = "numeric")
colnames(aws_cluster) <- c("time_elapsed", "time_elapsed_oidc")
ggplot(aws_cluster, aes(x=time_elapsed)) +
geom_histogram(bins=10)
ggplot(aws_cluster, aes(x=time_elapsed_oidc)) +
geom_histogram(bins=10)
aws_workload <- read.table("eks/kubernetes/workload/timings.txt", header = F, sep = " ", colClasses = "numeric")
colnames(aws_workload) <- "time_elapsed"
ggplot(aws_workload, aes(x=time_elapsed)) +
geom_histogram(bins = 20, color="darkblue", fill="lightblue") +
#geom_vline(aes(xintercept=mean(time_elapsed), color="blue", linetype="dashed")) +
geom_density(alpha=.92, fill="#FF6666")
### COMBINED ###
# Cluster
aws_cluster$group <- "aws"
aws_cluster_main <- aws_cluster %>% select(-time_elapsed_oidc)
gcp_cluster$group <- "gcp"
cluster_combined <- rbind(aws_cluster_main, gcp_cluster)
ggplot(cluster_combined, aes(x=time_elapsed, fill=group)) +
geom_density()
# Cluster without OIDC
aws_cluster$no_oidc <- aws_cluster$time_elapsed - aws_cluster$time_elapsed_oidc
aws_cluster_no_oidc <- aws_cluster %>% select(c(-time_elapsed, -time_elapsed_oidc))
colnames(aws_cluster_no_oidc) <- c("group", "time_elapsed")
cluster_combined2 <- rbind(aws_cluster_no_oidc, gcp_cluster)
ggplot(cluster_combined2, aes(x=time_elapsed, fill=group)) +
geom_density(alpha=.5)
# Workload
aws_workload$group <- "aws"
gcp_workload$group <- "gcp"
workload_combined <- rbind(aws_workload, gcp_workload)
ggplot(workload_combined, aes(x=time_elapsed, fill=group)) +
geom_density(alpha=.5)
ggplot(cluster_combined, aes(x=time_elapsed, fill=group)) +
geom_density()
ggplot(cluster_combined2, aes(x=time_elapsed, fill=group)) +
geom_density(alpha=.5)
ggplot(workload_combined, aes(x=time_elapsed, fill=group)) +
geom_density(alpha=.5) +
ggtitle("Time elapsed for disaster recovery for scenario 1")
ggplot(workload_combined, aes(x=time_elapsed, fill=group)) +
geom_density(alpha=.5) +
ggtitle("Time elapsed for DR in scenario 1")
ggplot(workload_combined, aes(x=time_elapsed, fill=group)) +
geom_density(alpha=.5) +
ggtitle("Time elapsed for DR in scenario 1") + labs(fill = "Vendor")
ggplot(workload_combined, aes(x=time_elapsed, fill=group)) +
geom_density(alpha=.5) +
ggtitle("Time elapsed for DR in scenario 1") + labs(fill = "Vendor", x="Time Elapsed", y="Density")
ggplot(workload_combined, aes(x=time_elapsed, fill=group)) +
geom_density(alpha=.5) +
ggtitle("Time elapsed for DR in scenario 1") + labs(fill = "Vendor", x="Time elapsed", y="Density")
ggplot(workload_combined, aes(x=time_elapsed, fill=group)) +
geom_density(alpha=.5) +
ggtitle("Time elapsed for DR in scenario 1") + labs(fill = "Vendor", x="Time elapsed (s)", y="Density")
ggplot(cluster_combined2, aes(x=time_elapsed, fill=group)) +
geom_density(alpha=.5) +
ggtitle("Time elapsed for DR in scenario 2") + labs(fill = "Vendor", x="Time elapsed (s)", y="Density")
ggplot(cluster_combined2, aes(x=time_elapsed, fill=group)) +
geom_density(alpha=.5) +
ggtitle("Time elapsed for DR in scenario 2 (without OIDC provider)") + labs(fill = "Vendor", x="Time elapsed (s)", y="Density")
ggplot(cluster_combined, aes(x=time_elapsed, fill=group)) +
geom_density() +
ggtitle("Time elapsed for DR in scenario 2 (with OIDC provider)") + labs(fill = "Vendor", x="Time elapsed (s)", y="Density")
ggplot(workload_combined, aes(x=time_elapsed, fill=group)) +
geom_density(alpha=.5) +
geom_vline(aes(xintercept = mean(speed)),col='red',size=2) +
ggtitle("Time elapsed for DR in scenario 1") + labs(fill = "Vendor", x="Time elapsed (s)", y="Density")
ggplot(workload_combined, aes(x=time_elapsed, fill=group)) +
geom_density(alpha=.5) +
geom_vline(aes(xintercept = mean(time_elapsed)),col='red',size=2) +
ggtitle("Time elapsed for DR in scenario 1") + labs(fill = "Vendor", x="Time elapsed (s)", y="Density")
ggplot(workload_combined, aes(x=time_elapsed, fill=group)) +
geom_density(alpha=.5) +
geom_vline(aes(xintercept = mean(time_elapsed[group="gcp"])),col='red',size=2) +
ggtitle("Time elapsed for DR in scenario 1") + labs(fill = "Vendor", x="Time elapsed (s)", y="Density")
ggplot(workload_combined, aes(x=time_elapsed, fill=group)) +
geom_density(alpha=.5) +
geom_vline(aes(xintercept = mean_aws),col='red',size=2) +
ggtitle("Time elapsed for DR in scenario 1") + labs(fill = "Vendor", x="Time elapsed (s)", y="Density")
mean_aws <- mean(aws_workload)
mean_gcp <- mean(gcp_workload)
ggplot(workload_combined, aes(x=time_elapsed, fill=group)) +
geom_density(alpha=.5) +
geom_vline(aes(xintercept = mean_aws),col='red',size=2) +
ggtitle("Time elapsed for DR in scenario 1") + labs(fill = "Vendor", x="Time elapsed (s)", y="Density")
mean_aws
aws_workload)
aws_workload
mean_aws <- mean(aws_workload$time_elapsed)
mean_gcp <- mean(gcp_workload$time_elapsed)
ggplot(workload_combined, aes(x=time_elapsed, fill=group)) +
geom_density(alpha=.5) +
geom_vline(aes(xintercept = mean_aws),col='red',size=2) +
ggtitle("Time elapsed for DR in scenario 1") + labs(fill = "Vendor", x="Time elapsed (s)", y="Density")
ggplot(workload_combined, aes(x=time_elapsed, fill=group)) +
geom_density(alpha=.5) +
geom_vline(aes(xintercept = mean_aws),col='red',size=1) +
ggtitle("Time elapsed for DR in scenario 1") + labs(fill = "Vendor", x="Time elapsed (s)", y="Density")
ggplot(workload_combined, aes(x=time_elapsed, fill=group)) +
geom_density(alpha=.5) +
geom_vline(aes(xintercept = mean_aws), col='red', size=1, show.legend = "AWS mean") +
ggtitle("Time elapsed for DR in scenario 1") + labs(fill = "Vendor", x="Time elapsed (s)", y="Density")
ggplot(workload_combined, aes(x=time_elapsed, fill=group)) +
geom_density(alpha=.5) +
geom_vline(aes(xintercept = mean_aws), col='red', size=1, show.legend = c("AWS mean")) +
ggtitle("Time elapsed for DR in scenario 1") + labs(fill = "Vendor", x="Time elapsed (s)", y="Density")
ggplot(workload_combined, aes(x=time_elapsed, fill=group)) +
geom_density(alpha=.5) +
geom_vline(aes(xintercept = mean_aws), col='red', size=1, show.legend = T) +
ggtitle("Time elapsed for DR in scenario 1") + labs(fill = "Vendor", x="Time elapsed (s)", y="Density")
aws_workload$group <- "aws"
gcp_workload$group <- "gcp"
workload_combine <- rbind(aws_workload, gcp_workload)
mean_aws <- mean(aws_workload$time_elapsed)
mean_gcp <- mean(gcp_workload$time_elapsed)
ggplot(workload_combined, aes(x=time_elapsed, fill=group)) +
geom_density(alpha=.5) +
geom_vline(aes(xintercept = mean_aws), col='red', size=1, show.legend = T) +
geom_vline(aes(xintercept = mean_gcp), col='blue', size=1, show.legend = T) +
ggtitle("Time elapsed for DR in scenario 1") + labs(fill = "Vendor", x="Time elapsed (s)", y="Density")
mean_time_difference <- mean_gcp - mean_aws
ggplot(workload_combined, aes(x=time_elapsed, fill=group)) +
geom_density(alpha=.5) +
geom_vline(aes(xintercept = mean_aws), col='red', size=1) +
geom_vline(aes(xintercept = mean_gcp), col='blue', size=1) +
ggtitle("Time elapsed for DR in scenario 1") + labs(fill = "Vendor", x="Time elapsed (s)", y="Density")
median_aws <- median(aws_workload$time_elapsed)
mean_gcp <- mean(gcp_workload$time_elapsed)
median_gcp <- median(gcp_workload$time_elapsed)
ggsave("workload.png", plot=workload)
workload <- ggplot(workload_combined, aes(x=time_elapsed, fill=group)) +
geom_density(alpha=.5) +
geom_vline(aes(xintercept = mean_aws), col='red', size=1) +
geom_vline(aes(xintercept = mean_gcp), col='blue', size=1) +
ggtitle("Time elapsed for DR in scenario 1") + labs(fill = "Vendor", x="Time elapsed (s)", y="Density")
ggsave("workload.png", plot=workload)
workload <- ggplot(workload_combined, aes(x=time_elapsed, fill=group)) +
geom_density(alpha=.5) +
geom_vline(aes(xintercept = mean_aws), col='red', size=1) +
geom_vline(aes(xintercept = mean_gcp), col='blue', size=1) +
ggtitle("Time elapsed for DR in scenario 1") + labs(fill = "Vendor", x="Time elapsed (s)", y="Density")
ggsave("workload.png", plot=workload)
workload <- ggplot(workload_combined, aes(x=time_elapsed, fill=group)) +
geom_density(alpha=.5) +
geom_vline(aes(xintercept = mean_aws), col='red', size=1) +
geom_vline(aes(xintercept = mean_gcp), col='blue', size=1) +
ggtitle("Time elapsed for recovery in scenario 1") + labs(fill = "Vendor", x="Time elapsed (s)", y="Density")
ggsave("workload.png", plot=workload)
ggsave("workload.png", plot=workload, width = "7.22", height = "3.69")
ggsave("workload.png", plot=workload, width = "7.22")
ggsave("workload.png", plot=workload, width = "7,22")
ggsave("workload.png", plot=workload, width = "7")
ggsave("workload.png", plot=workload)
aws_cluster$no_oidc <- aws_cluster$time_elapsed - aws_cluster$time_elapsed_oidc
aws_cluster_no_oidc <- aws_cluster %>% select(c(-time_elapsed, -time_elapsed_oidc))
colnames(aws_cluster_no_oidc) <- c("group", "time_elapsed")
cluster_combined2 <- rbind(aws_cluster_no_oidc, gcp_cluster)
mean_aws <- mean(aws_cluster$time_elapsed)
median_aws <- median(aws_cluster$time_elapsed)
mean_gcp <- mean(gcp_cluster$time_elapsed)
median_gcp <- median(gcp_cluster$time_elapsed)
mean_time_difference <- mean_gcp - mean_aws
cluster_no_oidc <- ggplot(cluster_combined2, aes(x=time_elapsed, fill=group)) +
geom_density(alpha=.5) +
geom_vline(aes(xintercept = mean_aws), col='red', size=1) +
geom_vline(aes(xintercept = mean_gcp), col='blue', size=1) +
ggtitle("Time elapsed for DR in scenario 2 (without OIDC provider)") + labs(fill = "Vendor", x="Time elapsed (s)", y="Density")
ggsave("cluster_no_oidc.png", plot=cluster_no_oidc)
aws_cluster$no_oidc <- aws_cluster$time_elapsed - aws_cluster$time_elapsed_oidc
aws_cluster_no_oidc <- aws_cluster %>% select(c(-time_elapsed, -time_elapsed_oidc))
colnames(aws_cluster_no_oidc) <- c("group", "time_elapsed")
cluster_combined2 <- rbind(aws_cluster_no_oidc, gcp_cluster)
mean_aws <- mean(aws_cluster_no_oidc$time_elapsed)
median_aws <- median(aws_cluster_no_oidc$time_elapsed)
mean_gcp <- mean(gcp_cluster$time_elapsed)
median_gcp <- median(gcp_cluster$time_elapsed)
mean_time_difference <- mean_gcp - mean_aws
cluster_no_oidc <- ggplot(cluster_combined2, aes(x=time_elapsed, fill=group)) +
geom_density(alpha=.5) +
geom_vline(aes(xintercept = mean_aws), col='red', size=1) +
geom_vline(aes(xintercept = mean_gcp), col='blue', size=1) +
ggtitle("Time elapsed for DR in scenario 2 (without OIDC provider)") + labs(fill = "Vendor", x="Time elapsed (s)", y="Density")
ggsave("cluster_no_oidc.png", plot=cluster_no_oidc)
# Cluster without OIDC
aws_cluster$no_oidc <- aws_cluster$time_elapsed - aws_cluster$time_elapsed_oidc
aws_cluster_no_oidc <- aws_cluster %>% select(c(-time_elapsed, -time_elapsed_oidc))
colnames(aws_cluster_no_oidc) <- c("group", "time_elapsed")
cluster_combined2 <- rbind(aws_cluster_no_oidc, gcp_cluster)
mean_aws <- mean(aws_cluster_no_oidc$time_elapsed)
median_aws <- median(aws_cluster_no_oidc$time_elapsed)
mean_gcp <- mean(gcp_cluster$time_elapsed)
median_gcp <- median(gcp_cluster$time_elapsed)
mean_time_difference <- mean_gcp - mean_aws
cluster_no_oidc <- ggplot(cluster_combined2, aes(x=time_elapsed, fill=group)) +
geom_density(alpha=.5) +
geom_vline(aes(xintercept = mean_aws), col='red', size=1) +
geom_vline(aes(xintercept = mean_gcp), col='blue', size=1) +
ggtitle("Time elapsed for DR in scenario 2 (without OIDC provider)") + labs(fill = "Vendor", x="Time elapsed (s)", y="Density")
ggsave("cluster_no_oidc.png", plot=cluster_no_oidc)
# Workload
aws_workload$group <- "aws"
gcp_workload$group <- "gcp"
workload_combine <- rbind(aws_workload, gcp_workload)
mean_aws <- mean(aws_workload$time_elapsed)
median_aws <- median(aws_workload$time_elapsed)
mean_gcp <- mean(gcp_workload$time_elapsed)
median_gcp <- median(gcp_workload$time_elapsed)
mean_time_difference <- mean_gcp - mean_aws
workload <- ggplot(workload_combined, aes(x=time_elapsed, fill=group)) +
geom_density(alpha=.5) +
geom_vline(aes(xintercept = mean_aws), col='red', size=1) +
geom_vline(aes(xintercept = mean_gcp), col='blue', size=1) +
ggtitle("Time elapsed for recovery in scenario 1") + labs(fill = "Vendor", x="Time elapsed (s)", y="Density")
ggsave("workload.png", plot=workload)
# Cluster without OIDC
aws_cluster$no_oidc <- aws_cluster$time_elapsed - aws_cluster$time_elapsed_oidc
aws_cluster_no_oidc <- aws_cluster %>% select(c(-time_elapsed, -time_elapsed_oidc))
colnames(aws_cluster_no_oidc) <- c("group", "time_elapsed")
cluster_combined2 <- rbind(aws_cluster_no_oidc, gcp_cluster)
mean_aws <- mean(aws_cluster_no_oidc$time_elapsed)
median_aws <- median(aws_cluster_no_oidc$time_elapsed)
mean_gcp <- mean(gcp_cluster$time_elapsed)
median_gcp <- median(gcp_cluster$time_elapsed)
mean_time_difference <- mean_gcp - mean_aws
cluster_no_oidc <- ggplot(cluster_combined2, aes(x=time_elapsed, fill=group)) +
geom_density(alpha=.5) +
geom_vline(aes(xintercept = mean_aws), col='red', size=1) +
geom_vline(aes(xintercept = mean_gcp), col='blue', size=1) +
ggtitle("Time elapsed for DR in scenario 2 (without OIDC provider)") + labs(fill = "Vendor", x="Time elapsed (s)", y="Density")
ggsave("cluster_no_oidc.png", plot=cluster_no_oidc)
# Workload
aws_workload$group <- "aws"
gcp_workload$group <- "gcp"
workload_combine <- rbind(aws_workload, gcp_workload)
mean_aws <- mean(aws_workload$time_elapsed)
median_aws <- median(aws_workload$time_elapsed)
mean_gcp <- mean(gcp_workload$time_elapsed)
median_gcp <- median(gcp_workload$time_elapsed)
mean_time_difference <- mean_gcp - mean_aws
workload <- ggplot(workload_combined, aes(x=time_elapsed, fill=group)) +
geom_density(alpha=.5) +
geom_vline(aes(xintercept = mean_aws), col='red', size=1) +
geom_vline(aes(xintercept = mean_gcp), col='blue', size=1) +
ggtitle("Time elapsed for recovery in scenario 1") + labs(fill = "Vendor", x="Time elapsed (s)", y="Density")
ggsave("workload.png", plot=workload)
gcp_cluster <- read.table("../gke/timings.txt", header = F, sep = " ", colClasses = "numeric")
colnames(gcp_cluster) <- "time_elapsed"
ggplot(gcp_cluster, aes(x=time_elapsed)) +
geom_histogram(bins=6)
library("stringr")
library("ggplot2")
library("dplyr")
gcp_cluster <- read.table("../gke/timings.txt", header = F, sep = " ", colClasses = "numeric")
colnames(gcp_cluster) <- "time_elapsed"
ggplot(gcp_cluster, aes(x=time_elapsed)) +
geom_histogram(bins=6)
ggplot(gcp_cluster, aes(x=time_elapsed)) +
geom_histogram(bins=7)
ggplot(gcp_cluster, aes(x=time_elapsed)) +
geom_histogram(bins=8)
ggplot(gcp_cluster, aes(x=time_elapsed)) +
geom_histogram(bins=9)
ggplot(gcp_cluster, aes(x=time_elapsed)) +
geom_histogram(bins=10)
ggplot(gcp_cluster, aes(x=time_elapsed)) +
geom_histogram(bins=7)
aws_cluster <- read.table("../eks/timings.txt", header = F, sep = " ", colClasses = "numeric")
colnames(aws_cluster) <- c("time_elapsed", "time_elapsed_oidc")
ggplot(aws_cluster, aes(x=time_elapsed)) +
geom_histogram(bins=10)
ggplot(aws_cluster, aes(x=time_elapsed_oidc)) +
geom_histogram(bins=10)
library("stringr")
library("ggplot2")
library("dplyr")
### GCP ###
gcp_cluster <- read.table("../gke/timings.txt", header = F, sep = " ", colClasses = "numeric")
colnames(gcp_cluster) <- "time_elapsed"
ggplot(gcp_cluster, aes(x=time_elapsed)) +
geom_histogram(bins=7)
gcp_workload <- read.table("../gke/kubernetes/workload/timings.txt", header = F, sep = " ", colClasses = "numeric")
colnames(gcp_workload) <- "time_elapsed"
ggplot(gcp_workload, aes(x=time_elapsed)) +
geom_histogram(bins = 20)
### AWS ###
aws_cluster <- read.table("../eks/timings.txt", header = F, sep = " ", colClasses = "numeric")
colnames(aws_cluster) <- c("time_elapsed", "time_elapsed_oidc")
ggplot(aws_cluster, aes(x=time_elapsed)) +
geom_histogram(bins=10)
ggplot(aws_cluster, aes(x=time_elapsed_oidc)) +
geom_histogram(bins=10)
aws_workload <- read.table("../eks/kubernetes/workload/timings.txt", header = F, sep = " ", colClasses = "numeric")
colnames(aws_workload) <- "time_elapsed"
ggplot(aws_workload, aes(x=time_elapsed)) +
geom_histogram(bins = 20, color="darkblue", fill="lightblue") +
#geom_vline(aes(xintercept=mean(time_elapsed), color="blue", linetype="dashed")) +
geom_density(alpha=.92, fill="#FF6666")
### COMBINED ###
# Cluster
aws_cluster$group <- "aws"
aws_cluster_main <- aws_cluster %>% select(-time_elapsed_oidc)
gcp_cluster$group <- "gcp"
cluster_combined <- rbind(aws_cluster_main, gcp_cluster)
ggplot(cluster_combined, aes(x=time_elapsed, fill=group)) +
geom_density() +
ggtitle("Time elapsed for DR in scenario 2 (with OIDC provider)") + labs(fill = "Vendor", x="Time elapsed (s)", y="Density")
# Cluster without OIDC
aws_cluster$no_oidc <- aws_cluster$time_elapsed - aws_cluster$time_elapsed_oidc
aws_cluster_no_oidc <- aws_cluster %>% select(c(-time_elapsed, -time_elapsed_oidc))
colnames(aws_cluster_no_oidc) <- c("group", "time_elapsed")
cluster_combined2 <- rbind(aws_cluster_no_oidc, gcp_cluster)
mean_aws <- mean(aws_cluster_no_oidc$time_elapsed)
median_aws <- median(aws_cluster_no_oidc$time_elapsed)
mean_gcp <- mean(gcp_cluster$time_elapsed)
median_gcp <- median(gcp_cluster$time_elapsed)
mean_time_difference <- mean_gcp - mean_aws
cluster_no_oidc <- ggplot(cluster_combined2, aes(x=time_elapsed, fill=group)) +
geom_density(alpha=.5) +
geom_vline(aes(xintercept = mean_aws), col='red', size=1) +
geom_vline(aes(xintercept = mean_gcp), col='blue', size=1) +
ggtitle("Time elapsed for DR in scenario 2 (without OIDC provider)") + labs(fill = "Vendor", x="Time elapsed (s)", y="Density")
ggsave("cluster_no_oidc.png", plot=cluster_no_oidc)
library("stringr")
library("ggplot2")
library("dplyr")
### GCP ###
gcp_cluster <- read.table("../gke/timings.txt", header = F, sep = " ", colClasses = "numeric")
colnames(gcp_cluster) <- "time_elapsed"
ggplot(gcp_cluster, aes(x=time_elapsed)) +
geom_histogram(bins=7)
gcp_workload <- read.table("../gke/kubernetes/workload/timings.txt", header = F, sep = " ", colClasses = "numeric")
colnames(gcp_workload) <- "time_elapsed"
ggplot(gcp_workload, aes(x=time_elapsed)) +
geom_histogram(bins = 20)
aws_cluster <- read.table("../eks/timings.txt", header = F, sep = " ", colClasses = "numeric")
colnames(aws_cluster) <- c("time_elapsed", "time_elapsed_oidc")
ggplot(aws_cluster, aes(x=time_elapsed)) +
geom_histogram(bins=10)
ggplot(aws_cluster, aes(x=time_elapsed_oidc)) +
geom_histogram(bins=10)
aws_workload <- read.table("../eks/kubernetes/workload/timings.txt", header = F, sep = " ", colClasses = "numeric")
colnames(aws_workload) <- "time_elapsed"
ggplot(aws_workload, aes(x=time_elapsed)) +
geom_histogram(bins = 20, color="darkblue", fill="lightblue") +
#geom_vline(aes(xintercept=mean(time_elapsed), color="blue", linetype="dashed")) +
geom_density(alpha=.92, fill="#FF6666")
aws_cluster <- read.table("../eks/timings.txt", header = F, sep = " ", colClasses = "numeric")
aws_cluster <- read.table("../eks/timings.txt", header = F, sep = " ", colClasses = "numeric")
colnames(aws_cluster) <- c("time_elapsed", "time_elapsed_oidc")
ggplot(aws_cluster, aes(x=time_elapsed)) +
geom_histogram(bins=10)
ggplot(aws_cluster, aes(x=time_elapsed_oidc)) +
geom_histogram(bins=10)
aws_workload <- read.table("../eks/kubernetes/workload/timings.txt", header = F, sep = " ", colClasses = "numeric")
colnames(aws_workload) <- "time_elapsed"
ggplot(aws_workload, aes(x=time_elapsed)) +
geom_histogram(bins = 20, color="darkblue", fill="lightblue") +
#geom_vline(aes(xintercept=mean(time_elapsed), color="blue", linetype="dashed")) +
geom_density(alpha=.92, fill="#FF6666")
### COMBINED ###
# Cluster
aws_cluster$group <- "aws"
aws_cluster_main <- aws_cluster %>% select(-time_elapsed_oidc)
gcp_cluster$group <- "gcp"
cluster_combined <- rbind(aws_cluster_main, gcp_cluster)
ggplot(cluster_combined, aes(x=time_elapsed, fill=group)) +
geom_density() +
ggtitle("Time elapsed for DR in scenario 2 (with OIDC provider)") + labs(fill = "Vendor", x="Time elapsed (s)", y="Density")
# Cluster without OIDC
aws_cluster$no_oidc <- aws_cluster$time_elapsed - aws_cluster$time_elapsed_oidc
aws_cluster_no_oidc <- aws_cluster %>% select(c(-time_elapsed, -time_elapsed_oidc))
colnames(aws_cluster_no_oidc) <- c("group", "time_elapsed")
cluster_combined2 <- rbind(aws_cluster_no_oidc, gcp_cluster)
mean_aws <- mean(aws_cluster_no_oidc$time_elapsed)
median_aws <- median(aws_cluster_no_oidc$time_elapsed)
mean_gcp <- mean(gcp_cluster$time_elapsed)
median_gcp <- median(gcp_cluster$time_elapsed)
mean_time_difference <- mean_gcp - mean_aws
cluster_no_oidc <- ggplot(cluster_combined2, aes(x=time_elapsed, fill=group)) +
geom_density(alpha=.5) +
geom_vline(aes(xintercept = mean_aws), col='red', size=1) +
geom_vline(aes(xintercept = mean_gcp), col='blue', size=1) +
ggtitle("Time elapsed for DR in scenario 2 (without OIDC provider)") + labs(fill = "Vendor", x="Time elapsed (s)", y="Density")
ggsave("cluster_no_oidc.png", plot=cluster_no_oidc)
cluster_no_oidc <- ggplot(cluster_combined2, aes(x=time_elapsed, fill=group)) +
geom_density(alpha=.5) +
geom_vline(aes(xintercept = mean_aws), col='red', size=1) +
geom_vline(aes(xintercept = mean_gcp), col='blue', size=1) +
ggtitle("Time elapsed for DR in scenario 2 (without OIDC provider)") + labs(fill = "Vendor", x="Time elapsed (s)", y="Density")
# Workload
aws_workload$group <- "aws"
gcp_workload$group <- "gcp"
workload_combine <- rbind(aws_workload, gcp_workload)
mean_aws <- mean(aws_workload$time_elapsed)
median_aws <- median(aws_workload$time_elapsed)
mean_gcp <- mean(gcp_workload$time_elapsed)
median_gcp <- median(gcp_workload$time_elapsed)
mean_time_difference <- mean_gcp - mean_aws
workload <- ggplot(workload_combined, aes(x=time_elapsed, fill=group)) +
geom_density(alpha=.5) +
geom_vline(aes(xintercept = mean_aws), col='red', size=1) +
geom_vline(aes(xintercept = mean_gcp), col='blue', size=1) +
ggtitle("Time elapsed for recovery in scenario 1") + labs(fill = "Vendor", x="Time elapsed (s)", y="Density")
ggsave("workload.png", plot=workload)
